stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_NAME: boiledsteak/infinity-cleaner-app

# Build Stage: Build the frontend using Node.js
build:
  stage: build
  image: node:18-alpine  # Use Node.js image to build frontend
  script:
    - npm install --prefix frontend  # Install dependencies for frontend
    - npm run build --prefix frontend  # Build the frontend and generate 'dist' folder
    - ls -la frontend/dist  # Check if the dist folder is created
  artifacts:
    paths:
      - frontend/dist  # Save the 'dist' folder as an artifact
    expire_in: 1 hour  # Optionally, specify how long the artifacts are kept

# Deploy Stage:
deploy:
  stage: deploy
  image: docker:24  # Use Docker image to build and push Docker image
  services:
    - docker:dind  # Use Docker-in-Docker to allow Docker commands
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    # Build the Docker image
    - docker build -t $IMAGE_NAME:latest .

    # Push the Docker image
    - docker push $IMAGE_NAME:latest

